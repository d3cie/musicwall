import { useRouter } from 'next/router'
import * as vars from '../../../vars'
import { useState, useEffect, useContext } from 'react'
import styled from 'styled-components'
import React from 'react'
import ProfileBar from '../../../components/layouts/ProfileBar'
import Music from '../../../components/primitives/Icons/Music'
import Album from '../../../components/primitives/Icons/Album'
import Artist from '../../../components/primitives/Icons/Artist'
import Link from 'next/link'
import Song from '../../../components/compounds/Song'
import SongMobile from '../../../components/compounds/Song/SongMobile'
import Ellipsis from '../../../components/primitives/Animations/Elipsis'
import DualRing from '../../../components/primitives/Animations/DualRing'
import getuser from '../../../services/getuser'
import Error from 'next/error'
import Head from 'next/head'
import PlaySongSpotify from '../../../components/compounds/Song/PlaySongSpotify'
import AlbumMobile from '../../../components/compounds/Album/AlbumMobile'
import ArtistMobile from '../../../components/compounds/Artist/ArtistMobile'
import WallIcon from '../../../components/primitives/Icons/Wall'
import { LoginContext } from '../../../pages/_app'
import Wall from '../../../components/layouts/Wall'
import Plus from '../../../components/primitives/Icons/Plus'
import AddBio from '../../../components/layouts/Objectives/AddBio'
import AddPicture from '../../../components/layouts/Objectives/AddPicture'
import AddWall from '../../../components/layouts/Objectives/AddWall'
import getwalls from '../../../services/getwalls'


const Cont = styled.main`
  /* background-color:${vars.GREY}; */
  background-color: ${vars.LIGHT_GREY};
  /* min-height:100vh; */
  display: flex;
  flex-direction: column;
  width:100%;

  height:fit-content;`


const GettingStarted = styled.div`
max-width: ${vars.MAX_WIDTH};
padding:20px;
margin-top:20px;
width: 100%;
& #objcont{
  padding:20px;
  display: flex;
  overflow:auto;
}
& label{
  padding-left:10px;
  color: ${vars.MAIN_WHITE};
font-weight: 600;
& span{
  color:${vars.ORANGE};
}
}
& ul{
    color: ${vars.MAIN_WHITE};
    font-size: 1.2rem;
    padding-right:20px;
    opacity:.9;
    
    li{
      margin-top:10px;
      line-height:2rem;
    }
}
  & div{

    color: ${vars.MAIN_WHITE};
    font-size: 1.5rem;
    font-weight: 500;
  }`


const NoWallsCont = styled.div`
  display:flex;
  align-items: center;
  justify-content: center;
  height: 40vh;
  color: ${vars.MAIN_WHITE};
  font-weight: 400;
  font-size: 1.5rem;

  & a{
    color: ${vars.MAIN_BLUE};
    font-size: 1.1rem;
    margin-top:10px;

  }
& label{
    margin-left:10px;
    text-align:center;
margin-top:10px;
/* opacity: .9; */

    margin-left:0px;

}
& svg{
   border-right:solid 2px ${vars.LIGHER_GREY};
   padding-right:20px;
   margin:10px;
   height:150px;
   fill:${vars.GREY};
   stroke:${vars.LIGHER_GREY};

   border-right:none;
   padding-right:0;
 }
  @media (max-width: 700px) {
    & label{
    margin-left:0px;
}
& svg{
   border-right:none;
   padding-right:0;
  
 }
    flex-direction:column;
        font-size: 1.5rem;

}
flex-direction:column;
        font-size: 1.5rem;
  `

export default function UserProfile() {
  const router = useRouter()
  const pathname = router.asPath
  const [data, setData] = useState(null)
  const [username, setUsername] = useState(null)
  const isLoggedInData = useContext(LoginContext)


  const [isloggedinaccount, setIsLoggedInAccount] = useState(false)

  useEffect(() => {
    setUsername(window.location.pathname.substring(3))

    if (isLoggedInData?.username == username) {
      setIsLoggedInAccount(true)
    }
    async function fetchData() {
      const response = getuser(window.location.pathname.substring(3))
      setData(await response)
      // console.log()
      console.log(await getwalls(data.profile.walls))
      
    }
    fetchData()

  }, [username])


  if (!data) return <Cont

    style={{
      position: 'absolute',
      bottom: 0,
      left: 0,
      zIndex: 10,
      display: 'flex',
      flexDirection: 'column-reverse',
      color: vars.MAIN_WHITE,
      fontWeight: '200',
      width: '100%',
      height: '100vh',
      alignItems: 'center',
      justifyContent: 'center',
      transition: 'all 0.2s'
    }}

  ><Ellipsis color={vars.MAIN_WHITE} /></Cont>

  if (data.status != "success") {
    return <Error statusCode={404} />
  }

  return (
    <>
      <Head>
        <title>Music Wall page for @{username}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <meta name="color-scheme" content="light dark"></meta>
        <meta name="theme-color" content={vars.DARK_GREY} />
      </Head>

      <Cont>
        {/* <PlaySongSpotify/> */}
        <ProfileBar
          bio={data.profile.profileinfo.bio}
          profileimage={data.profile.profileinfo.profileimage}
          username={data.profile.username}
          countrycode={data.profile.profileinfo.countrycode}
          DisplayName={data.profile.profileinfo.displayname}
          isProf = {isloggedinaccount}
        />

        <Cont>
          <NoWallsCont>


            <WallIcon />
            <label>
              No walls added <br />yet.

            </label>
            {/* <a>Goto homepage</a> */}
          </NoWallsCont>
          <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>

            {(isloggedinaccount) ? 
            <GettingStarted>
              <div>
                Getting Started:

              </div>
              <ul style={{ marginBottom: '80px' }}>
                <li>Press the <Plus style={{ background: vars.MAIN_WHITE, padding: 2, borderRadius: '50%', fill: vars.GREY }} width='1.2rem' height='1.2rem' /> button to open up the search page.</li>
                <li>Choose at least 3 songs, an album and an artist to add to a wall and save it.</li>
                <li>Already saved walls are archived on your page as a part of your page history.</li>
                <li>You can add another wall to your wall by clicking the add button after 24 hours of your last wall.</li>
              </ul>


              {/* <div id='objcont'>
                <AddBio />
                <AddPicture />
                <AddWall />
              </div> */}
            </GettingStarted>
            : ''}
          </div>
        </Cont>

      </Cont>
    </>

  )
}































{/* <CategoryCont>
        <Link href={`/u/${username}/songs`}>

          <Category className={(pathname == `/u/${username}/songs`) ? 'active' : 'normal'}>
            <Music />Songs
          </Category>
        </Link>

        <Link href={`/u/${username}/albums`} >
          <Category className={(pathname == `/u/${username}/albums`) ? 'active' : 'normal'}>
            <Album />Albums
          </Category>
        </Link>

        <Link href={`/u/${username}/artists`}>
          <Category className={(pathname == `/u/${username}/artists`) ? 'active' : 'normal'}>
            <Artist /> Artists
          </Category>
        </Link>
      </CategoryCont> */}