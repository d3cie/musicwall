import { useRouter } from 'next/router'
import * as vars from '../../../vars'
import { useState, useEffect, useContext } from 'react'
import styled from 'styled-components'
import React from 'react'
import ProfileBar from '../../../components/layouts/ProfileBar'
import Ellipsis from '../../../components/primitives/Animations/Elipsis'
import getuser from '../../../services/getuser'
import Error from 'next/error'
import Head from 'next/head'
import getwalls from '../../../services/getwalls'

import { LoginContext } from '../../../pages/_app'
import Walls from '../../../components/layouts/Walls'

import 'react-toastify/dist/ReactToastify.css'
import { ToastContainer, toast, cssTransition } from 'react-toastify'


const fade = cssTransition({
  enter: "fade_in",
  exit: "fade_out"
});


const Cont = styled.main`
  background-color: ${vars.LIGHT_GREY};
  display: flex;
  flex-direction: column;
  width:100%;
  height:fit-content;`



function UserProfile(props) {
  const router = useRouter()
  const pathname = router.asPath
  const [data, setData] = useState(null)
  const [username, setUsername] = useState(null)
  const isLoggedInData = useContext(LoginContext)
  const [populatedWalls, setPopulatedWalls] = useState(null)

  const { notifs } = router.query

  const [isloggedinaccount, setIsLoggedInAccount] = useState(false)


  useEffect(() => {
    setUsername(window.location.pathname.substring(3))
    props.setProfileImage()
    if (isLoggedInData?.username == username) {
      setIsLoggedInAccount(true)
    }
    async function fetchData() {
      const response = await getuser(window.location.pathname.substring(3))
      setData(response)
      if (response.profile.walls.length) {
        getwalls(response.profile.walls.reverse()).then((res) => {
          setPopulatedWalls(res)
        }
        )
      } else {
        setPopulatedWalls([])
      }

    }

    fetchData()
    //removed router.aspath and notifs.  Were causing an unnessesary re-render
  }, [window.location.pathname])

  if (!data) return <Cont

    style={{
      position: 'absolute',
      bottom: 0,
      left: 0,
      zIndex: 10,
      display: 'flex',
      flexDirection: 'column-reverse',
      color: vars.MAIN_WHITE,
      fontWeight: '200',
      width: '100%',
      height: '100vh',
      alignItems: 'center',
      justifyContent: 'center',
      transition: 'all 0.2s'
    }}

  ><Ellipsis color={vars.MAIN_WHITE} /></Cont>

  if (data.status != "success") {
    return <Error statusCode={404} />
  }

  return (
    <>
      <Head>
        <title>Music Wall page for @{username}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <meta name="color-scheme" content="light dark"></meta>
        <meta name="theme-color" content={vars.DARK_GREY} />
      </Head>
      <ToastContainer
        position="bottom-right"
        autoClose={5000}
        transition={fade}
        theme={'colored'}
        hideProgressBar={true}
        newestOnTop={false}
        closeOnClick
        rtl={false}
        pauseOnFocusLoss
        draggable
        pauseOnHover
      />
      <Cont>
        {/* <PlaySongSpotify/> */}
        <ProfileBar
          profile={data.profile}
        />

        <Cont style={{ alignItems: 'center' }}>
          <Walls wallOwner={username} walls={populatedWalls} />
        </Cont>

      </Cont>
    </>

  )
}


export default UserProfile